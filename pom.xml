<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>com.ozonehis</groupId>
        <artifactId>maven-parent</artifactId>
        <version>1.0.0-SNAPSHOT</version>
    </parent>

    <groupId>com.ozonehis</groupId>
    <artifactId>ozone-faimer</artifactId>
    <version>2.0.0-SNAPSHOT</version>

    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <maven.compiler.source>8</maven.compiler.source>
        <maven.compiler.target>8</maven.compiler.target>

        <samplepatients.version>1.3.0-SNAPSHOT</samplepatients.version>
        <datafilter.version>2.2.0</datafilter.version>
        <keycloakThemeFaimer.version>1.0.0-SNAPSHOT</keycloakThemeFaimer.version>
        <bedmanagement.version>6.0.0</bedmanagement.version>
        <emrapi.version>2.1.0</emrapi.version>
        <event.version>2.10.0</event.version>
    </properties>

    <dependencies>
        <!--  OpenMRS modules -->
        <dependency>
            <groupId>org.openmrs.module</groupId>
            <artifactId>samplepatients-omod</artifactId>
            <version>${samplepatients.version}</version>
            <type>jar</type>
        </dependency>
        <dependency>
            <groupId>org.openmrs.module</groupId>
            <artifactId>datafilter-omod</artifactId>
            <version>${datafilter.version}</version>
            <type>jar</type>
        </dependency>
        <!--  Keycloak FAIMER theme -->
        <dependency>
            <groupId>com.ozonehis</groupId>
            <artifactId>keycloak-theme-faimer</artifactId>
            <version>${keycloakThemeFaimer.version}</version>
            <type>zip</type>
        </dependency>
        <dependency>
            <groupId>org.openmrs.module</groupId>
            <artifactId>emrapi-omod</artifactId>
            <version>${emrapi.version}</version>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>org.openmrs</groupId>
            <artifactId>event-omod</artifactId>
            <version>${event.version}</version>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>org.openmrs.module</groupId>
            <artifactId>bedmanagement-omod</artifactId>
            <version>${bedmanagement.version}</version>
            <scope>provided</scope>
        </dependency>
    </dependencies>

    <repositories>
        <repository>
            <id>mks-nexus-public</id>
            <url>https://nexus.mekomsolutions.net/repository/maven-public/</url>
        </repository>
        <repository>
            <id>mks-nexus-private</id>
            <url>https://nexus.mekomsolutions.net/repository/maven-private/</url>
        </repository>
    </repositories>

    <build>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-resources-plugin</artifactId>
                <version>3.2.0</version>
                <executions>
                    <execution>
                        <!-- Exclude files from Ozone -->
                        <id>Exclude unneeded Ozone files</id>
                        <phase>process-resources</phase>
                        <goals>
                            <goal>copy-resources</goal>
                        </goals>
                        <configuration>
                            <outputDirectory>
                                ${project.build.directory}/${project.artifactId}-${project.version}
                            </outputDirectory>
                            <overwrite>true</overwrite>
                            <resources>
                                <resource>
                                    <directory>${project.build.directory}/ozone</directory>
                                    <excludes>
                                        <exclude>distro/configs/**/locations*/**</exclude>
                                        <exclude>distro/configs/**/ampathforms*/ampath_poc_adult_return_visit_form_v1.6_core-demo.json</exclude>
                                        <exclude>distro/configs/**/ampathforms*/covid19-core_demo.json</exclude>
                                        <exclude>distro/configs/**/ampathforms*/Mental Health Assessment Form.json</exclude>
                                        <exclude>distro/configs/**/ampathforms*/stuctured_soap_note.json</exclude>
                                        <exclude>distro/configs/**/ampathforms*/test-form-core_demo.json</exclude>
                                        <exclude>distro/configs/**/ampathformstranslations*/**</exclude>
                                        <exclude>distro/configs/**/locations*/**</exclude>
                                    </excludes>
                                </resource>
                            </resources>
                        </configuration>
                    </execution>
                    <execution>
                        <!-- Copy over the Docker Compose overrides file -->
                        <id>Copy docker-compose-overrides.yml</id>
                        <phase>process-resources</phase>
                        <goals>
                            <goal>copy-resources</goal>
                        </goals>
                        <configuration>
                            <outputDirectory>
                                ${project.build.directory}/${project.artifactId}-${project.version}/run/docker/
                            </outputDirectory>
                            <overwrite>true</overwrite>
                            <resources>
                                <resource>
                                    <directory>${project.basedir}/scripts</directory>
                                    <includes>
                                        <include>*.yml</include>
                                    </includes>
                                    <filtering>true</filtering>
                                </resource>
                            </resources>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-dependency-plugin</artifactId>
                <executions>
                    <execution>
                        <id>Unpack and Copy FAIMER Keycloak theme</id>
                        <phase>generate-resources</phase>
                        <goals>
                            <goal>unpack-dependencies</goal>
                        </goals>
                        <configuration>
                            <excludeTransitive>true</excludeTransitive>
                            <outputDirectory>${project.build.directory}/${project.artifactId}-${project.version}/distro/binaries/keycloak/themes</outputDirectory>
                            <includeArtifactIds>keycloak-theme-faimer</includeArtifactIds>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
        </plugins>

    </build>

    <profiles>
        <profile>
            <id>validator</id>
            <activation>
                <jdk>1.8</jdk>
                <property>
                    <name>env.CI</name>
                    <value>true</value>
                </property>
            </activation>
            <build>
                <plugins>
                    <!-- copy over merged/packaged OpenMRS config for validation at the integration-test phase -->
                    <plugin>
                        <artifactId>maven-antrun-plugin</artifactId>
                        <executions>
                        <execution>
                            <id>Copy OpenMRS Initializer configs for validation</id>
                            <phase>pre-integration-test</phase>
                            <configuration>
                            <target>
                                <copy todir="${project.build.directory}/validator/configuration">
                                <fileset
                                    dir="${project.build.directory}/${project.artifactId}-${project.version}/distro/configs/openmrs/initializer_config" />
                                </copy>
                            </target>
                            </configuration>
                            <goals>
                            <goal>run</goal>
                            </goals>
                        </execution>
                        </executions>
                    </plugin>
                    <!-- hooking the OpenMRS config validation to the integration-test phase -->
                    <plugin>
                        <groupId>org.openmrs.maven.plugins</groupId>
                        <artifactId>openmrs-packager-maven-plugin</artifactId>
                        <version>1.7.0</version>
                        <executions>
                            <execution>
                                <id>Validate OpenMRS configuration</id>
                                <phase>integration-test</phase>
                                <goals>
                                    <goal>validate-configurations</goal>
                                </goals>
                                <configuration>
                                    <sourceDir>${project.build.directory}/validator/configuration</sourceDir>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>
</project>
